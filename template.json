{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "location": {
            "type": "string"
        },
        "vnet_name": {
            "type": "String"
        },

        // AZURE SQL
        "administrators": {
            "type": "object",
            "defaultValue": {}
        },
        "collation": {
            "type": "string"
        },
        "databaseName": {
            "type": "string"
        },
        "tier": {
            "type": "string"
        },
        "skuName": {
            "type": "string"
        },
        "maxSizeBytes": {
            "type": "int"
        },
        "serverName": {
            "type": "string"
        },

        // AZURE FUNCTIONS Network
        "ip_func_name": {
            "type": "string"
        },
        "ip_func_sku": {
            "type": "string"
        },
        "ip_func_publicIPAllocationMethod": {
            "type": "string"
        },
        "ip_func_publicIpAddressVersion": {
            "type": "string"
        },
        "ip_func_tier": {
            "type": "string"
        },
        "natGateways_func_name": {
            "type": "string"
        },
        "natGateways_func_sku": {
            "type": "string"
        },

        // AZURE FUNCTIONS
        "funcName": {
            "type": "string"
        },
        "hostingPlanName": {
            "type": "string"
        },
        "alwaysOn": {
            "type": "bool"
        },
        "storageAccountName": {
            "type": "string"
        },
        "netFrameworkVersion": {
            "type": "string"
        },
        "sku": {
            "type": "string"
        },
        "skuCode": {
            "type": "string"
        },
        "relayName": {
            "type": "string"
        },
        "hybridConnectionName": {
            "type": "string"
        },
        "onPremiseEndpoint": {
            "type": "string"
        },
        "onPremiseEndpointIP": {
            "type": "string"
        },
        "onPremiseEndpointPORT": {
            "type": "string"
        },
        "func_subnet_name": {
            "type": "String"
        },

        // KEY VAULT
        "keyVault_name": {
            "type": "string"
        },
        "keyVault_sku": {
            "type": "string"
        },
        "role_keyVaultSecretUser": {
            "type": "string"
        },

        // POWER BI
        "powerbi_name": {
            "type": "string"
        },
        "powerbi_sku": {
            "type": "string"
        },
        "powerbi_admin": {
            "type": "string"
        },
        "powerbi_mode": {
            "type": "string"
        },

        // PURVIEW
        "purview_name": {
            "type": "string"
        },

        // VM
        "storageAccount-vm_name": {
            "type": "string"
        },
        "vm_name": {
            "type": "string"
        },
        "vm_networkSecurityGroupName": {
            "type": "string"
        },
        "ip-vm_name": {
            "type": "string"
        },
        "vm_subnet_name": {
            "type": "string"
        },
        "nic-vm_name": {
            "type": "string"
        },
        "vm_adminUsername": {
            "type": "string"
        },
        "vm_adminPassword": {
            "type": "string"
        }

    },
    "resources": [
        // NETWORK
        {
            "type": "Microsoft.Network/virtualNetworks",
            "apiVersion": "2020-11-01",
            "name": "[parameters('vnet_name')]",
            "location": "[parameters('location')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/natGateways', parameters('natGateways_func_name'))]"
            ],
            "properties": {
                "addressSpace": {
                    "addressPrefixes": [
                        "10.0.0.0/16"
                    ]
                },
                "subnets": [
                    // {
                    //     "name": "[parameters('powerbi_subnet_name')]",
                    //     "properties": {
                    //         "addressPrefix": "10.0.0.0/24",
                    //         "serviceEndpoints": [
                    //             {
                    //                 "service": "Microsoft.Sql",
                    //                 "locations": [
                    //                     "[parameters('location')]"
                    //                 ]
                    //             }
                    //         ],
                    //         "delegations": [
                    //             {
                    //                 "name": "Microsoft.PowerPlatform.vnetaccesslinks",
                    //                 "properties": {
                    //                     "serviceName": "Microsoft.PowerPlatform/vnetaccesslinks"
                    //                 }
                    //             }
                    //         ],
                    //         "privateEndpointNetworkPolicies": "Enabled",
                    //         "privateLinkServiceNetworkPolicies": "Enabled"
                    //     }
                    // },
                    {
                        "name": "[parameters('func_subnet_name')]",
                        "properties": {
                            "addressPrefix": "10.0.0.0/24",
                            "privateEndpointNetworkPolicies": "Enabled",
                            "privateLinkServiceNetworkPolicies": "Enabled",
                            "natGateway": {
                                "id": "[resourceId('Microsoft.Network/natGateways/', parameters('natGateways_func_name'))]"
                            },
                            "delegations": [
                                {
                                    "name": "delegation",
                                    "properties": {
                                        "serviceName": "Microsoft.Web/serverfarms"
                                    }
                                }
                            ]
                        }
                    },
                    {
                        "name": "[parameters('vm_subnet_name')]",
                        "properties": {
                            "addressPrefix": "10.0.1.0/24",
                            "privateEndpointNetworkPolicies": "Enabled",
                            "privateLinkServiceNetworkPolicies": "Enabled"
                        }
                    }
                ],
                "enableDdosProtection": false
            }
        },

        // AZURE SQL
        {
            "apiVersion": "2020-11-01-preview",
            "type": "Microsoft.Sql/servers",
            "location": "[parameters('location')]",
            "name": "[parameters('serverName')]",
            "properties": {
                "administrators": "[parameters('administrators')]"
            },
            "resources": [
                {
                    "apiVersion": "2021-02-01-preview",
                    "dependsOn": [
                        "[concat('Microsoft.Sql/servers/', parameters('serverName'))]"
                    ],
                    "location": "[parameters('location')]",
                    "name": "[parameters('databaseName')]",
                    "properties": {
                        "collation": "[parameters('collation')]",
                        "maxSizeBytes": "[parameters('maxSizeBytes')]"
                    },
                    "sku": {
                        "name": "[parameters('skuName')]",
                        "tier": "[parameters('tier')]"
                    },
                    "type": "databases"
                },
                // {
                //     "type": "Microsoft.Sql/servers/virtualNetworkRules",
                //     "apiVersion": "2021-05-01-preview",
                //     "name": "[concat(parameters('serverName'), '/', parameters('powerbi-sql_vnet_rule_name'))]",
                //     "dependsOn": [
                //         "[resourceId('Microsoft.Sql/servers', parameters('serverName'))]",
                //         "[resourceId('Microsoft.Network/virtualNetworks', parameters('vnet_name'))]"
                //     ],
                //     "properties": {
                //         "virtualNetworkSubnetId": "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('vnet_name'), parameters('powerbi_subnet_name'))]"
                //     }
                // },
                {
                    "type": "Microsoft.Sql/servers/firewallRules",
                    "apiVersion": "2021-05-01-preview",
                    "name": "[concat(parameters('serverName'), '/', 'func_ip')]",
                    "dependsOn": [
                        "[resourceId('Microsoft.Sql/servers', parameters('serverName'))]",
                        "[resourceId('Microsoft.Network/publicIPAddresses', parameters('ip_func_name'))]"
                    ],
                    "properties": {
                        "endIpAddress": "[reference(resourceId('Microsoft.Network/publicIPAddresses',parameters('ip_func_name'))).IpAddress]",
                        "startIpAddress": "[reference(resourceId('Microsoft.Network/publicIPAddresses',parameters('ip_func_name'))).IpAddress]"
                    }
                },
                {
                    "type": "Microsoft.Sql/servers/firewallRules",
                    "apiVersion": "2021-05-01-preview",
                    "name": "[concat(parameters('serverName'), '/', 'vm_ip')]",
                    "dependsOn": [
                        "[resourceId('Microsoft.Sql/servers', parameters('serverName'))]",
                        "[resourceId('Microsoft.Network/publicIPAddresses', parameters('ip-vm_name'))]"
                    ],
                    "properties": {
                        "endIpAddress": "[reference(resourceId('Microsoft.Network/publicIPAddresses',parameters('ip-vm_name'))).IpAddress]",
                        "startIpAddress": "[reference(resourceId('Microsoft.Network/publicIPAddresses',parameters('ip-vm_name'))).IpAddress]"
                    }
                }
            ]
        },

        // AZURE FUNCTION
        {
            "apiVersion": "2020-08-01",
            "type": "Microsoft.Network/publicIPAddresses",
            "name": "[parameters('ip_func_name')]",
            "location": "[parameters('location')]",
            "sku": {
                "name": "[parameters('ip_func_sku')]",
                "tier": "[parameters('ip_func_tier')]"
            },
            "properties": {
                "publicIPAllocationMethod": "[parameters('ip_func_publicIPAllocationMethod')]",
                "publicIpAddressVersion": "[parameters('ip_func_publicIpAddressVersion')]"
            }
        },
        {
            "apiVersion": "2019-09-01",
            "type": "Microsoft.Network/natGateways",
            "name": "[parameters('natGateways_func_name')]",
            "location": "[parameters('location')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/publicIPAddresses', parameters('ip_func_name'))]"
            ],
            "sku": {
                "name": "[parameters('natGateways_func_sku')]"
            },
            "properties": {
                "publicIPAddresses": [
                    {
                        "id": "[resourceId('Microsoft.Network/publicIPAddresses', parameters('ip_func_name'))]"
                    }
                ],
                "idleTimeoutInMinutes": 4
            }
        },
        {
            "apiVersion": "2019-06-01",
            "type": "Microsoft.Storage/storageAccounts",
            "name": "[parameters('storageAccountName')]",
            "location": "[parameters('location')]",
            "sku": {
                "name": "Standard_LRS"
            },
            "properties": {
                "supportsHttpsTrafficOnly": true,
                "minimumTlsVersion": "TLS1_2"
            }
        },
        {
            "apiVersion": "2018-11-01",
            "name": "[parameters('hostingPlanName')]",
            "type": "Microsoft.Web/serverfarms",
            "location": "[parameters('location')]",
            "properties": {
                "name": "[parameters('hostingPlanName')]"
            },
            "sku": {
                "Tier": "[parameters('sku')]",
                "Name": "[parameters('skuCode')]"
            }
        },
        {
            "apiVersion": "2021-02-01",
            "name": "[parameters('funcName')]",
            "type": "Microsoft.Web/sites",
            "kind": "functionapp",
            "location": "[parameters('location')]",
            "dependsOn": [
                "[concat('Microsoft.Web/serverfarms/', parameters('hostingPlanName'))]",
                "[concat('Microsoft.Storage/storageAccounts/', parameters('storageAccountName'))]",
                "[resourceId('Microsoft.Network/virtualNetworks', parameters('vnet_name'))]"
            ],
            "identity": {
                "type": "SystemAssigned"
            },
            "properties": {
                "name": "[parameters('funcName')]",
                "siteConfig": {
                    "appSettings": [
                        {
                            "name": "FUNCTIONS_EXTENSION_VERSION",
                            "value": "~4"
                        },
                        {
                            "name": "FUNCTIONS_WORKER_RUNTIME",
                            "value": "dotnet"
                        },
                        {
                            "name": "AzureWebJobsStorage",
                            "value": "[concat('DefaultEndpointsProtocol=https;AccountName=',parameters('storageAccountName'),';AccountKey=',listKeys(resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccountName')), '2019-06-01').keys[0].value,';EndpointSuffix=','core.windows.net')]"
                        }
                    ],
                    "cors": {
                        "allowedOrigins": [
                            "https://portal.azure.com"
                        ]
                    },
                    "alwaysOn": "[parameters('alwaysOn')]",
                    "netFrameworkVersion": "[parameters('netFrameworkVersion')]"
                },
                "serverFarmId": "[resourceId('Microsoft.Web/serverfarms/', parameters('hostingPlanName'))]",
                "clientAffinityEnabled": false,
                "virtualNetworkSubnetId": "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('vnet_name'), parameters('func_subnet_name'))]"
            },
            "resources": [
                {
                    "type": "Microsoft.Web/sites/config",
                    "apiVersion": "2021-02-01",
                    "name": "[concat(parameters('funcName'), '/web')]",
                    "location": "[parameters('location')]",
                    "dependsOn": [
                        "[resourceId('Microsoft.Web/sites', parameters('funcName'))]"
                    ],
                    "properties": {
                        "vnetRouteAllEnabled": true
                    }
                }
            ]
        },
        {
            "apiVersion": "2018-01-01-preview",
            "name": "[parameters('relayName')]",
            "type": "Microsoft.Relay/Namespaces",
            "location": "[parameters('location')]",
            "resources": [
                {
                    "apiVersion": "2017-04-01",
                    "name": "[parameters('hybridConnectionName')]",
                    "type": "HybridConnections",
                    "dependsOn": [
                        "[resourceId('Microsoft.Relay/Namespaces', parameters('relayName'))]"
                    ],
                    "properties": {
                        "requiresClientAuthorization": true,
                        "userMetadata": "[concat('[{\"key\":\"endpoint\",\"value\":\"', parameters('onPremiseEndpoint'), '\"}]')]"
                    }
                }
            ]
        },
        {
            "name": "[concat(parameters('funcName'), '/', parameters('relayName'), '/', parameters('hybridConnectionName'))]",
            "type": "Microsoft.Web/sites/hybridConnectionNamespaces/relays",
            "apiVersion": "2018-02-01",
            "dependsOn": [
                "[resourceId('Microsoft.Web/sites', parameters('funcName'))]",
                "[resourceId('Microsoft.Relay/Namespaces', parameters('relayName'))]",
                "[resourceId('Microsoft.Relay/Namespaces/Hybridconnections', parameters('relayName'), parameters('hybridConnectionName'))]"
            ],
            "location": "[parameters('location')]",
            "properties": {
                "serviceBusNamespace": "[parameters('relayName')]",
                "relayName": "[parameters('hybridConnectionName')]",
                "relayArmUri": "[resourceId('Microsoft.Relay/Namespaces/Hybridconnections', parameters('relayName'), parameters('hybridConnectionName'))]",
                "hostName": "[parameters('onPremiseEndpointIP')]",
                "port": "[parameters('onPremiseEndpointPORT')]",
                "sendKeyName": "RootManageSharedAccessKey",
                "sendKeyValue": "[listkeys(resourceId('Microsoft.Relay/Namespaces/AuthorizationRules', parameters('relayName'), 'RootManageSharedAccessKey'), '2017-04-01').primaryKey]"
            }
        },

        // KEY VAULT
        {
            "type": "Microsoft.KeyVault/vaults",
            "name": "[parameters('keyVault_name')]",
            "apiVersion": "2019-09-01",
            "location": "[parameters('location')]",
            "dependsOn": [
                "[resourceId('Microsoft.Web/sites', parameters('funcName'))]"
            ],
            "properties": {
                "enableRbacAuthorization": true,
                "enableSoftDelete": true,
                "enablePurgeProtection": true, // ???
                "tenantId": "[subscription().tenantId]",
                "sku": {
                    "name": "[parameters('keyVault_sku')]",
                    "family": "A"
                },
                "networkAcls": {
                    "bypass": "None",
                    "defaultAction": "Deny",
                    "ipRules": [
                        {
                            "value": "[reference(resourceId('Microsoft.Network/publicIPAddresses',parameters('ip_func_name'))).IpAddress]"
                        }
                    ]
                }
            }
        },
        {
            "type": "Microsoft.Authorization/roleAssignments",
            "apiVersion": "2018-09-01-preview",
            "name": "[guid(resourceGroup().id)]",
            "properties": {
                "roleDefinitionId": "[concat('/providers/Microsoft.Authorization/roleDefinitions/', parameters('role_keyVaultSecretUser'))]",
                "principalId": "[reference(resourceId('Microsoft.Web/sites', parameters('funcName')), '2021-03-01','Full').identity.principalId]"
            }
        },

        // Power BI
        {
            "apiVersion": "2021-01-01",
            "name": "[parameters('powerbi_name')]",
            "location": "[parameters('location')]",
            "type": "Microsoft.PowerBIDedicated/capacities",
            "sku": {
                "name": "[parameters('powerbi_sku')]"
            },
            "properties": {
                "administration": {
                    "members": [
                        "[parameters('powerbi_admin')]"
                    ]
                },
                "mode": "[parameters('powerbi_mode')]"
            }
        },

        // AZURE PURVIEW
        {
            "type": "Microsoft.Purview/accounts",
            "apiVersion": "2021-07-01",
            "name": "[parameters('purview_name')]",
            "location": "westeurope",
            "sku": {
                "name": "Standard",
                "capacity": 1
            },
            "identity": {
                "type": "SystemAssigned"
            },
            "properties": {
                "cloudConnectors": {},
                "publicNetworkAccess": "Enabled",
                "managedResourceGroupName": "[concat('managed-rg-', parameters('purview_name'))]"
            }
        },

        // AZURE VM FOR POWER BI & PURVIEW
        {
            "type": "Microsoft.Storage/storageAccounts",
            "name": "[parameters('storageAccount-vm_name')]",
            "apiVersion": "2016-01-01",
            "location": "[parameters('location')]",
            "sku": {
                "name": "Standard_LRS"
            },
            "kind": "Storage",
            "properties": {}
        },
        {
            "apiVersion": "2016-03-30",
            "type": "Microsoft.Network/publicIPAddresses",
            "name": "[parameters('ip-vm_name')]",
            "location": "[parameters('location')]",
            "tags": {
                "vmname": "[parameters('vm_name')]"
            },
            "properties": {
                "publicIPAllocationMethod": "Static"
            }
        },
        {
            "name": "[parameters('vm_networkSecurityGroupName')]",
            "type": "Microsoft.Network/networkSecurityGroups",
            "apiVersion": "2016-09-01",
            "location": "[parameters('location')]",
            "tags": {
                "vmname": "[parameters('vm_name')]"
            },
            "properties": {
                "securityRules": [
                    {
                        "name": "default-allow-rdp",
                        "properties": {
                            "priority": 1000,
                            "sourceAddressPrefix": "*",
                            "protocol": "Tcp",
                            "destinationPortRange": "3389",
                            "access": "Allow",
                            "direction": "Inbound",
                            "sourcePortRange": "*",
                            "destinationAddressPrefix": "*"
                        }
                    }
                ]
            }
        },
        {
            "apiVersion": "2016-03-30",
            "type": "Microsoft.Network/networkInterfaces",
            "name": "[parameters('nic-vm_name')]",
            "location": "[parameters('location')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/publicIPAddresses/', parameters('ip-vm_name'))]",
                "[resourceId('Microsoft.Network/networkSecurityGroups/', parameters('vm_networkSecurityGroupName'))]",
                "[resourceId('Microsoft.Network/virtualNetworks', parameters('vnet_name'))]"
            ],
            "properties": {
                "ipConfigurations": [
                    {
                        "name": "ipconfig1",
                        "properties": {
                            "privateIPAllocationMethod": "Dynamic",
                            "publicIPAddress": {
                                "id": "[resourceId('Microsoft.Network/publicIPAddresses',parameters('ip-vm_name'))]"
                            },
                            "subnet": {
                                "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('vnet_name'), parameters('vm_subnet_name'))]"
                            }
                        }
                    }
                ],
                "networkSecurityGroup": {
                    "id": "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('vm_networkSecurityGroupName'))]"
                }
            }
        },
        {
            "apiVersion": "2018-04-01",
            "type": "Microsoft.Compute/virtualMachines",
            "name": "[parameters('vm_name')]",
            "location": "[parameters('location')]",
            "tags": {
                "vmname": "[parameters('vm_name')]"
            },
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts/', parameters('storageAccount-vm_name'))]",
                "[resourceId('Microsoft.Network/networkInterfaces/', parameters('nic-vm_name'))]"
            ],
            "identity": {
                "type": "SystemAssigned"
            },
            "properties": {
                "hardwareProfile": {
                    "vmSize": "Standard_A8_v2"
                },
                "osProfile": {
                    "computerName": "[parameters('vm_name')]",
                    "adminUsername": "[parameters('vm_adminUsername')]",
                    "adminPassword": "[parameters('vm_adminPassword')]"
                },
                "storageProfile": {
                    "imageReference": {
                        "publisher": "MicrosoftWindowsServer",
                        "offer": "WindowsServer",
                        "sku": "2019-Datacenter",
                        "version": "latest"
                    },
                    "osDisk": {
                        "name": "[concat(parameters('vm_name'),'_OSDisk')]",
                        "caching": "ReadWrite",
                        "createOption": "FromImage",
                        "managedDisk": {
                            "storageAccountType": "StandardSSD_LRS"
                        }
                    },
                    "dataDisks": [
                        {
                            "name": "[concat(parameters('vm_name'),'_DataDisk1')]",
                            "diskSizeGB": 128,
                            "lun": 0,
                            "managedDisk": {
                                "storageAccountType": "StandardSSD_LRS"
                            },
                            "createOption": "Empty"
                        }
                    ]
                },
                "networkProfile": {
                    "networkInterfaces": [
                        {
                            "id": "[resourceId('Microsoft.Network/networkInterfaces',parameters('nic-vm_name'))]"
                        }
                    ]
                },
                "diagnosticsProfile": {
                    "bootDiagnostics": {
                        "enabled": true,
                        "storageUri": "[reference(resourceId('Microsoft.Storage/storageAccounts/', parameters('storageAccount-vm_name'))).primaryEndpoints.blob]"
                    }
                }
            }
        }
    ]
}